name: loadbalancer-pipeline
on: workflow_dispatch
  # push:
  #   branches:
  #     - main
  #     - 'feature/**'
permissions:
  id-token: write
  contents: read    
jobs:
 az-login-terraform-init-plan: 
    runs-on: load-balancer
    name: az-login-terraform-init-plan
    steps: 
     - name: Checkout
       uses: actions/checkout@v5.0.0
       
     - name: Azure login
       uses: Azure/login@v2.3.0
       with:
          client-id: 6ce57f3b-b49b-47d0-b4d5-4d065ee8c696
          tenant-id: b24a5be3-6852-43c6-b00e-086d16b535ab
          subscription-id: 258a8e61-bb4a-4a2e-99d2-ca7211e4a421
          
     - name: Terraform fmt
       id: fmt
       working-directory: ./env/dev
       run: terraform fmt -check
       continue-on-error: true
       
     - name: Terraform Init
       id: init
       working-directory: ./env/dev
       run: terraform init -input=false
       
     - name: Terraform Plan
       id: plan
       run: terraform plan -no-color -input=false
       working-directory: ./env/dev
       continue-on-error: true
       
 ScanningStage:
    needs: az-login-terraform-init-plan
    name: ScanningStage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        
      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          
      - name: Run tflint
        working-directory: ./env/dev
        run: tflint --init && tflint

      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      - name: Run tfsec
        working-directory: ./env/dev
        run: tfsec .
        
 Apply-stage:
   runs-on: load-balancer
   needs: ScanningStage
   name: terraformapply
   environment: dev
   steps:
    - name: Terraform Init
      id: init
      working-directory: ./env/dev
      run: terraform init -input=false

    # - name: TerraformApply
    #   id: apply
    #   working-directory: ./env/dev
    #   run: terraform apply -auto-approve

  
          

      
    
    
  
      
